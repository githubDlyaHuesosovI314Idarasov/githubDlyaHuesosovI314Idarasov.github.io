@using Models
@model IEnumerable<Models.Ticket>

@{
    ViewData["Title"] = "Index";
}
<h3>Passenger List</h3>
<table class="table">
    <tr>
        <th>
            <a asp-action="Create">Create New</a>
        </th>
    
    @foreach(Passenger item in ViewBag.Passengers)
    {
      <th>
         <a asp-action="Index" asp-route-id="@item.Id">@item.Name</a>
      </th>
    }
    </tr>
</table>

<h1>Index</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Passenger)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.From)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.To)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimeFrom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimeTo)
            </th>
            @{ /*
            <th>
                @Html.DisplayNameFor(model => model.Time)
            </th>
               */
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Passenger.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.From)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.To)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeFrom)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeTo)
            </td>
            @{
                /*
            <td>
                @Html.DisplayFor(modelItem => item.Time)
            </td>
                */
            }
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
